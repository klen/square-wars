Fade = Entity:create {
  past = 0,
  size = 29,
  frames = 30,
  reverse = false,
  fadetable = {
    split "1,1,1,1,1,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,0,0,0,0,0,0,0,0",
    split "2,2,2,2,2,2,130,130,130,130,130,130,130,130,130,130,128,128,128,128,128,128,128,128,0,0,0,0,0",
    split "3,3,3,3,3,3,3,131,131,131,131,131,131,129,129,129,129,129,129,129,129,129,0,0,0,0,0,0,0",
    split "4,4,4,4,4,132,132,132,132,132,132,132,132,132,132,130,130,128,128,128,128,128,128,128,128,128,0,0,0",
    split "5,5,5,5,133,133,133,133,133,133,133,133,130,130,130,128,128,128,128,128,128,128,128,128,0,0,0,0,0",
    split "6,6,6,6,134,134,13,13,13,13,13,13,141,5,5,5,5,5,133,133,133,133,130,128,128,128,128,0,0",
    split "7,7,7,6,6,6,6,6,6,134,134,134,134,134,134,141,5,5,5,5,133,133,133,130,128,128,128,128,0",
    split "8,8,8,8,136,136,136,136,136,136,136,136,132,132,132,132,132,132,130,130,128,128,128,128,128,128,0,0,0",
    split "9,9,9,9,9,9,9,4,4,4,4,4,4,132,132,132,132,132,132,132,128,128,128,128,128,128,128,0,0",
    split "10,10,10,10,138,138,138,138,138,138,4,4,4,4,4,132,132,132,132,132,133,128,128,128,128,128,128,0,0",
    split "11,11,11,139,139,139,139,139,139,139,3,3,3,3,3,3,3,131,129,129,129,129,129,0,0,0,0,0,0",
    split "12,12,12,12,12,140,140,140,140,140,140,140,140,140,131,131,131,131,131,1,1,129,129,129,129,129,0,0,0",
    split "13,13,13,13,13,141,141,141,141,5,5,5,5,133,133,133,133,133,130,130,129,129,128,128,128,128,0,0,0",
    split "14,14,14,14,14,134,134,134,134,141,141,141,141,141,2,2,2,132,133,133,130,130,130,128,128,128,128,0,0",
    split "15,15,15,143,143,143,134,134,134,134,134,134,134,141,5,5,5,5,5,133,133,133,130,128,128,128,128,0,0",
  },

  init = function(_ENV)
    past = 0
    speed = size / frames
  end,

  update = function(_ENV)
    past += speed
    if past > size then
      _ENV.draw = noop
      _ENV.update = noop
    end
  end,

  draw = function(_ENV)
    local idx = flr(past) + 1
    for f in all(fadetable) do
      pal(f[1], f[not reverse and idx or (size - idx + 1)])
    end
  end,
}
